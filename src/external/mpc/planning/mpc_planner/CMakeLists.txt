cmake_minimum_required(VERSION 3.6)

project(mpc_planner)

### Dependencies
find_package(ament_cmake_auto REQUIRED)
ament_auto_find_build_dependencies()
### Compile options
set(CMAKE_CXX_STANDARD 14)

# Generate code
ament_acado_generate(
  GENERATED_PATH
  LIB_NAME collision_free_bicycle
  GENERATOR scripts/collision_free_bicycle.cpp
  OUTPUT_PATH collision_free_bicycle
  SNIPPET_PATHS "${motion_common_DIR}/../../autogeneration_code_snippets")

# Hack: Don't need libacado for general code; only need hpmpc if autogenerated code for that
list(REMOVE_ITEM ${PROJECT_NAME}_FOUND_BUILD_DEPENDS "ament_acado")

# Build library
ament_auto_add_library(${PROJECT_NAME} SHARED
  src/mpc_planner/config.cpp
  src/mpc_planner/debug.cpp
  src/mpc_planner/mpc_planner.cpp
)
string(CONCAT checks
  "-misc-macro-parentheses," # Generally good, but doesn't work for default method stuff
  "-clang-diagnostic-padded," # Good to know, but not helpful
  "-fuchsia-default-arguments," # Lazy
  "-modernize-use-using," # Acado from here on down
  "-readability-avoid-const-params-in-decls,"
  "-modernize-deprecated-headers,"
  "-hicpp-deprecated-headers,"
  "-cppcoreguidelines-pro-bounds-constant-array-index") # Will bring back #8
target_include_directories(${PROJECT_NAME} PRIVATE ${GENERATED_PATH})
target_link_libraries(${PROJECT_NAME} collision_free_bicycle)
mpc_warnings(${PROJECT_NAME} MSGS ADDITIONAL_WARNINGS -Wno-padded)
mpc_clang_tidy(${PROJECT_NAME} MSGS ADDITIONAL_CHECKS ${checks})

### Test
if(BUILD_TESTING)
  # Linters
  find_package(ament_lint_auto REQUIRED)
  ament_lint_auto_find_test_dependencies()
  # Unit test
  ament_add_gtest(mpc_planner_unit_tests
    test/gtest_main.cpp
    test/sanity_checks.cpp)
  ament_target_dependencies(mpc_planner_unit_tests "planner_common")
  target_link_libraries(mpc_planner_unit_tests ${PROJECT_NAME} collision_free_bicycle)
  mpc_warnings(mpc_planner_unit_tests GTEST MSGS
    ADDITIONAL_WARNINGS -Wno-gnu-zero-variadic-macro-arguments)
  add_dependencies(mpc_planner_unit_tests ${PROJECT_NAME} collision_free_bicycle)
endif()

ament_auto_package()
