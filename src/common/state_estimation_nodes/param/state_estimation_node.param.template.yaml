# config/state_estimator_test.param.yaml
---

/**:
  ros__parameters:
    # The default output topic is "filtered_state". If this needs to be modified, use topic
    # remapping as states here:
    # https://index.ros.org/doc/ros2/Tutorials/Node-arguments/#name-remapping
    # Topics that we subscribe to.
    topics:
      # Topics in input_odom are used to subscribe to nav_msgs/msg/Odometry messages.
      # There can be any number of topic in each input category.
      input_odom:
        - /odom_topic_1
        - /odom_topic_2
      # Topics in input_odom subscribe to geometry_msgs/msg/PoseWithCovariance messages.
      input_pose:
        - /pose_topic_1
        - /pose_topic_2
      # Topics in input_twist subscribe to geometry_msgs/msg/TwistWithCovariance messages.
      input_twist:
        - /twist_topic_1
        - /twist_topic_2
      # Topics in input_relative_pos subscribe to
      # autoware_auto_geometry_msgs::msg::RelativePositionWithCovarianceStamped messages.
      input_relative_pos:
        - /relative_pos_topic_1
        - /relative_pos_topic_2

    # Specify variances for the process noise. The number of values represent the dimensionality of
    # the state. For example, if your state concerns 3D motion (along x, y, z, having roll, pitch,
    # and yaw) then there should be 6 values in the provided array.
    process_noise_variances:
      acceleration: [2.0, 2.0, 2.0, 2.0, 2.0, 2.0]

    # Specify the variances for the state noise. Note that these are not sigma squared, but just
    # sigma values.
    state_variances: [
      1.0, 1.0, 1.0, 1.0, 1.0, 1.0,  # position variances
      1.0, 1.0, 1.0, 1.0, 1.0, 1.0,  # velocity variances
      1.0, 1.0, 1.0, 1.0, 1.0, 1.0   # acceleration variances
    ]

    # Set the mahalanobis threshold for rejecting outlier measurements. [optional]
    mahalanobis_threshold: 10.0

    # There are two options for setting how the node publishes.
    # Pick ONLY ONE of the following methods:
    # - Either provide a number here. The node will publish this number of times per second.
    output_frequency: 30.0
    # - Or put "data_driven: true" here. The node will publish when new data arrives.
    data_driven: true

    # Decides if the node publishes tf.
    publish_tf: false

    # Frame <frame_id> in which the pose is estimated. For a point in the ego-frame p_ego holds:
    # p_<frame_id> = T_<frame_id>_ego * p_ego,
    # where T_<frame_id>_ego is a transformation matrix constructed from the rotation and
    # translation of the ego frame with respect to the <frame_id> frame.
    frame_id: "map"

    # A child frame id for the tf transformations.
    child_frame_id: "base_link"

    # The minimum speed at which the output message orientation would be taken from the last
    # observed pose or odometry message. This is 0 by default, i.e. not used by default.
    min_speed_to_use_speed_orientation: 0.0
