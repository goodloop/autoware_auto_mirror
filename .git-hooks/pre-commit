#!/bin/bash

current_dir=$(pwd)
repo_root_dir=$(git rev-parse --show-toplevel)

cd "${repo_root_dir}" || exit

run_cmd() {
    cmd=$1
    shift

    echo "Running ${cmd}"
    echo "---------------"
    out=/tmp/${cmd}_output
    if ament_${cmd} "$@" &> $out; then
        echo "No errors found"
        echo
    else
        cat $out
        rm $out
        exit 1
    fi
}

cpp_files=$(git diff --cached --name-only --diff-filter=ACMRT | grep -E "\.(c|cpp|h|hpp)$")
if [[ -n ${cpp_files} ]]; then
    echo "Checking the following C++ file(s):"
    echo "--------------------------------------------"
    echo "${cpp_files}" | sed 's/^/\ -\ /g'
    echo

    echo "Running uncrustify"
    echo "---------------"
    if ament_uncrustify --reformat ${cpp_files} &> /tmp/uncrustify_output; then
        echo "No errors found"
        echo
    else
        echo "Some files were reformatted, please check the changes and commit again"
        exit 1
    fi

    run_cmd "cpplint" ${cpp_files}
    run_cmd "cppcheck" ${cpp_files}
fi

python_files=$(git diff --cached --name-only --diff-filter=ACMRT | grep -E "\.py$")
if [[ -n ${python_files} ]]; then
    echo "Checking the following python file(s):"
    echo "--------------------------------------------"
    echo "${python_files}" | sed 's/^/\ -\ /g'
    echo

    run_cmd "flake8" ${python_files}
    run_cmd "pep257" ${python_files}
fi

cd "${current_dir}" || exit
